name: CI - Buger Eats

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do C√≥digo
        uses: actions/checkout@v4

      - name: üêç Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Criar e ativar ambiente virtual
        run: |
          python -m venv .venv
          echo "source .venv/bin/activate" >> $GITHUB_ENV
          source .venv/bin/activate

      - name: üì¶ Instalar depend√™ncias do Python
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîß Criar Arquivo `.env`
        run: |
          mkdir -p api
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > api/.env
          echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> api/.env
          echo "MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}" >> api/.env
          echo "AMQP_URL=${{ secrets.AMQP_URL }}" >> api/.env
          echo "QUEUE_NAME=${{ secrets.QUEUE_NAME }}" >> api/.env

      - name: üßê Verificar Arquivo `.env`
        run: cat api/.env

      - name: üì¶ Instalar depend√™ncias do Node.js (API e Web)
        run: |
          cd api && npm install
          cd ../web && npm install

      - name: üöÄ Iniciar API
        run: |
          cd api
          npm start &
          sleep 10
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
          MONGO_COLLECTION_NAME: ${{ secrets.MONGO_COLLECTION_NAME }}
          AMQP_URL: ${{ secrets.AMQP_URL }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}

      - name: üöÄ Iniciar Frontend
        run: |
          cd web
          npm start &
          sleep 10

      - name: üîÑ Verificar se API e Web Est√£o Rodando
        run: |
          curl --retry 5 --retry-delay 10 --retry-connrefused -v http://localhost:3000/ || exit 1
          curl --retry 5 --retry-delay 10 --retry-connrefused -v http://localhost:3001/ || exit 1

      - name: üñ•Ô∏è Instalar Robot Framework e Bibliotecas
        run: |
          pip install robotframework robotframework-seleniumlibrary robotframework-requests robotframework-browser
          rfbrowser init

      - name: ü§ñ Executar Testes Automatizados
        run: |
          xvfb-run -a robot --variable BROWSER:chromium --variable HEADLESS:True -d results tests/web

      - name: üì§ Armazenar Relat√≥rios e Logs
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-de-testes
          path: results/
