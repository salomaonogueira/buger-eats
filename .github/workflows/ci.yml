name: Buger Eats API CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Configuração inicial e Testes de API
  api-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout do Código
      - name: 📥 Checkout do Código
        uses: actions/checkout@v4

      # Verificar Existência da Pasta API
      - name: 🔍 Verificar Existência da Pasta API
        run: echo "api_exists=$( [ -d 'api' ] && echo true || echo false )" >> $GITHUB_ENV

      # Configuração Condicional
      - name: ⏭️ Ignorar se Pasta API Não Existe
        if: env.api_exists == 'false'
        run: echo "Pasta 'api' não encontrada. Encerrando job."
        continue-on-error: true

      # Configurar Ambiente Python
      - name: 📦 Configurar Ambiente Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Criar Ambiente Virtual e Instalar Dependências
      - name: 🐍 Configurar Ambiente e Dependências
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Criar Arquivo `.env`
      - name: 🔧 Criar Arquivo `.env`
        run: |
          cat <<EOF > api/.env
          MONGO_URI=${{ secrets.MONGO_URI }}
          MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}
          MONGO_COLLECTION_NAME=${{ secrets.MONGO_COLLECTION_NAME }}
          AMQP_URL=${{ secrets.AMQP_URL }}
          QUEUE_NAME=${{ secrets.QUEUE_NAME }}
          EOF

      # Instalar Dependências Node.js
      - name: 🚀 Instalar Dependências da API
        run: cd api && npm install

      # Iniciar API
      - name: 🚀 Iniciar API
        run: cd api && npm start &
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          MONGO_DB_NAME: ${{ secrets.MONGO_DB_NAME }}
          MONGO_COLLECTION_NAME: ${{ secrets.MONGO_COLLECTION_NAME }}
          AMQP_URL: ${{ secrets.AMQP_URL }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}

      # Aguardar API Estar Pronta
      - name: 🕒 Aguardar API
        run: |
          for i in {1..15}; do
            curl -s http://localhost:3333/health | grep -q "ok" && break || sleep 2
          done || echo "⚠️ Timeout ao aguardar API."

      # Executar Testes de API
      - name: 🧪 Executar Testes
        run: .venv/bin/robot -d results --loglevel INFO tests/api

      # Armazenar Relatórios e Logs
      - name: 📤 Armazenar Relatórios e Logs
        uses: actions/upload-artifact@v4
        with:
          name: relatorios-de-testes-api
          path: results/
